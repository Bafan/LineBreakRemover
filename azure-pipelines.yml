trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:

- bash: |
    PACKAGE_VERSION=$(node -p "require('./package.json').version")

    if [ -n "$SYSTEM_PULLREQUEST_PULLREQUESTNUMBER" ];
    then
      VERSION_STRING=${PACKAGE_VERSION}-pr-${SYSTEM_PULLREQUEST_PULLREQUESTNUMBER}-$(git rev-parse --short HEAD)
    else
      VERSION_STRING=${PACKAGE_VERSION}-ci-$(git rev-parse --short HEAD)
    fi

    VERSION_STRING=${PACKAGE_VERSION}
    npm --no-git-tag-version version $VERSION_STRING
    echo "##vso[build.updatebuildnumber]${VERSION_STRING}_${BUILD_BUILDID}"
    echo "$PACKAGE_VERSION" > version.txt
  displayName: Set version number of package and build

- script: |
    npm install
  displayName: 'npm install'

- script: |
    sudo npm install -g vsce
    vsce package
  displayName: Create VSIX

- bash: |
    echo $(Build.SourceBranch) | sed "s|refs/[^/]*/||" > branch.txt
    PACKAGE_VERSION=$(cat version.txt)
    VERSION_REGEX="## $(echo $PACKAGE_VERSION | sed 's/\./\\./g')"
  displayName: Get branch

- task: CopyFiles@2
  displayName: Stage VSIX for publishing
  inputs:
    contents: |-
      *.vsix
      version.txt
      branch.txt
    targetFolder: $(Build.ArtifactStagingDirectory)

- task: PublishPipelineArtifact@1
  displayName: Publish VSIX
  inputs:
    artifact: git-mob-vs-code
    targetPath: $(Build.ArtifactStagingDirectory)